apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: chaos-cluster
  name: chaos-cluster
  namespace: akka-kubernetes-tests
spec:
  replicas: 3
  selector:
    matchLabels:
     app: chaos-cluster
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: chaos-cluster
    spec:
      containers:
      - name: chaos-cluster
        image: docker-registry-default.centralpark.lightbend.com/akka-kubernetes-tests/chaos-cluster
        lifecycle:
          preStop:
            httpGet:
              path: /hello # this kills the pod
              port: http
        ports:
        - name: remoting
          containerPort: 2552
          protocol: TCP
        - name: management
          containerPort: 8558
          protocol: TCP
        - name: http
          containerPort: 8080
          protocol: TCP
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: VERSION
          value: latest
        readinessProbe:
          httpGet:
            path: /ready
            port: management
        livenessProbe:
          httpGet:
            path: /alive
            port: management
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: chaos-cluster
  name: chaos-cluster
  namespace: akka-kubernetes-tests
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: chaos-cluster
  type: ClusterIP
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: chaos-cluster
  name: chaos-cluster
  namespace: akka-kubernetes-tests
spec:
  host: chaos-cluster-tests.centralpark.lightbend.com
  port:
    targetPort: http
  tls:
    insecureEdgeTerminationPolicy: Allow
    termination: edge
  to:
    kind: Service
    name: chaos-cluster
    weight: 100
  wildcardPolicy: None
status:
  ingress:
  - conditions:
    host: chaos-cluster-tests.centralpark.lightbend.com
    routerName: router
    wildcardPolicy: None
