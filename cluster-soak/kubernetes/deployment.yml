apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: cluster-soak
  name: cluster-soak
  namespace: akka-long-running
spec:
  replicas: 3
  selector:
    matchLabels:
     app: cluster-soak
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: cluster-soak
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9001'
    spec:
      containers:
      - name: akka
        image: docker-registry-default.centralpark2.lightbend.com/akka-long-running/cluster-soak
        imagePullPolicy: Always
#        image: kubakka/cluster-soak:latest
#        image: kubakka/cluster-soak:1.3.3.7
#        imagePullPolicy: Never # TODO remove once stop testing locally
        ports:
        - name: remoting
          containerPort: 2552
          protocol: TCP
        - name: management
          containerPort: 8558
          protocol: TCP
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: prom-metrics
          containerPort: 9001
        env:
        - name: VERSION
          value: latest
        - name: LOG_LEVEL
          value: DEBUG
        readinessProbe:
          httpGet:
            path: /ready
            port: management
          initialDelaySeconds: 10 # should be at least contact-point-discovery.stable-margin
        livenessProbe:
          httpGet:
            path: /alive
            port: management
        resources:
          requests:
            memory: "512Mi"
            cpu: "1001m" # stupid JVM sets cores to the host resources if this is 1000m which is 1024 shares. This will result in scheduling based on 1001 but the JVM will see 2 cores
          limits:
            memory: "2048Mi"
        volumeMounts:
         - name: heap-dumps
           mountPath: /dumps
      volumes:
        - name: heap-dumps
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: cluster-soak
  name: cluster-soak
  namespace: akka-long-running
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: cluster-soak
  type: ClusterIP
